{"ast":null,"code":"var _jsxFileName = \"/Users/morris754/Documents/projects/dashboard/client/src/components/Timeline.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\"; //import MyChart from \"./components/MyChart\"\n\nimport testTimeData from \"../data/testTimeData\";\n\nclass Timeline extends Component {\n  constructor() {\n    super();\n    this.state = {\n      plotData: testTimeData\n    };\n    this.drawChart = this.drawChart.bind(this);\n  }\n\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  drawChart() {\n    function formateDate() {\n      return date.toLocaleString(\"en\", {\n        month: \"short\",\n        day: \"numeric\",\n        year: \"numeric\",\n        timeZone: \"UTC\"\n      });\n    }\n\n    function formatValue() {\n      return value.toLocaleString(\"en\", {\n        style: \"currency\",\n        currency: \"USD\"\n      });\n    }\n\n    var svg = d3.select(\"body\").append(\"svg\").attr(\"width\", 960).attr(\"height\", 300);\n    var margin = {\n      top: 20,\n      right: 30,\n      bottom: 30,\n      left: 40\n    };\n    var width = svg.attr(\"width\") - margin.left - margin.right;\n    var height = svg.attr(\"height\") - margin.bottom - margin.top;\n    x = d3.scaleUtc().domain(d3.extent(data, d => d.date)).range([margin.left, width - margin.right]);\n    var y = d3.scaleLinear().rangeRound([height, 0]); //var y_axis = d3.axisBottom(y);\n\n    var parseTime = d3.timeParse(\"%Y-%m-%d\");\n    x.domain(d3.extent(stockPlotData, function (d) {\n      return parseTime(d.date);\n    }));\n    y.domain([0, d3.max(stockPlotData, function (d) {\n      return d.a;\n    })]);\n\n    var multiline = function (category) {\n      var line = d3.line().x(function (d) {\n        return x(parseTime(d.date));\n      }).y(function (d) {\n        return y(d[category]);\n      });\n      return line;\n    };\n\n    var categories = ['a']; //var color = d3.scaleOrdinal(d3.schemeCategory10);\n\n    var g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    for (let i in categories) {\n      var lineFunction = multiline(categories[i]);\n      g.append(\"path\").datum(stockPlotData).attr(\"class\", \"line\").style(\"stroke\", \"blue\").style(\"fill\", \"None\").attr(\"d\", lineFunction);\n    } // Add the X Axis\n\n\n    g.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x).tickFormat(d3.timeFormat(\"%Y-%m-%d\"))); // Add the Y Axis\n\n    g.append(\"g\").call(d3.axisLeft(y));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, this.state.ticker);\n  }\n\n}\n\nexport default Timeline;","map":{"version":3,"sources":["/Users/morris754/Documents/projects/dashboard/client/src/components/Timeline.js"],"names":["React","Component","d3","testTimeData","Timeline","constructor","state","plotData","drawChart","bind","componentDidMount","formateDate","date","toLocaleString","month","day","year","timeZone","formatValue","value","style","currency","svg","select","append","attr","margin","top","right","bottom","left","width","height","x","scaleUtc","domain","extent","data","d","range","y","scaleLinear","rangeRound","parseTime","timeParse","stockPlotData","max","a","multiline","category","line","categories","g","i","lineFunction","datum","call","axisBottom","tickFormat","timeFormat","axisLeft","render","ticker"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\n//import MyChart from \"./components/MyChart\"\nimport testTimeData from \"../data/testTimeData\"\n\nclass Timeline extends Component {\n  constructor() {\n    super()\n    this.state = {\n      plotData:testTimeData\n    }\n    this.drawChart = this.drawChart.bind(this)\n  }\n\n  componentDidMount() {\n    this.drawChart()\n  }\n\n\n  drawChart() {\n\n    function formateDate () {\n        return date.toLocaleString(\"en\", {\n            month: \"short\",\n            day: \"numeric\",\n            year: \"numeric\",\n            timeZone: \"UTC\"\n          });\n      }\n    \n    function formatValue() {\n        return value.toLocaleString(\"en\", {\n            style: \"currency\",\n            currency: \"USD\"\n          });    \n      }\n\n      \n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 300)\n\n    var margin = ({top: 20, right: 30, bottom: 30, left: 40})\n    var width = svg.attr(\"width\") - margin.left - margin.right;\n    var height = svg.attr(\"height\") - margin.bottom - margin.top;\n\n\n      x = d3.scaleUtc()\n      .domain(d3.extent(data, d => d.date))\n      .range([margin.left, width - margin.right])\n    \n    var y = d3.scaleLinear().rangeRound([height, 0]);\n    //var y_axis = d3.axisBottom(y);\n    var parseTime = d3.timeParse(\"%Y-%m-%d\");\n    \n    x.domain(d3.extent(stockPlotData, function(d) { return parseTime(d.date); }));\n    y.domain([0, \n              d3.max(stockPlotData, function(d) { \n                return d.a;\n              })]);\n    \n    var multiline = function(category) {\n      var line = d3.line()\n                  .x(function(d) { return x(parseTime(d.date)); })\n                  .y(function(d) { return y(d[category]); });\n      return line;\n    }\n    \n    var categories = ['a'];\n    //var color = d3.scaleOrdinal(d3.schemeCategory10);\n    \n    var g = svg.append(\"g\")\n        .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n    for (let i in categories) {\n      var lineFunction = multiline(categories[i]);\n      g.append(\"path\")\n        .datum(stockPlotData) \n        .attr(\"class\", \"line\")\n        .style(\"stroke\", \"blue\")\n        .style(\"fill\", \"None\")\n        .attr(\"d\", lineFunction);\n    }\n  \n    // Add the X Axis\n    g.append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x).tickFormat(d3.timeFormat(\"%Y-%m-%d\")));\n  \n    // Add the Y Axis\n    g.append(\"g\")\n    .call(d3.axisLeft(y));\n  }\n\n\n  render(){\n    return (<div>{this.state.ticker}</div>)\n  }\n}\n\n\nexport default Timeline;"]},"metadata":{},"sourceType":"module"}