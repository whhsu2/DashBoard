{"ast":null,"code":"var _jsxFileName = \"/Users/morris754/Documents/projects/dashboard/client/src/components/Timeline.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nclass Timeline extends Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.drawChart = this.drawChart.bind(this);\n  }\n\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  async drawChart() {\n    var data = Object.assign(d3.csv('../data/aapl.csv').map(({\n      date,\n      close\n    }) => ({\n      date,\n      value: close\n    })), {\n      y: \"$ Close\"\n    });\n    var svg = d3.select(\"body\").append(\"svg\").attr(\"width\", 960).attr(\"height\", 300);\n    var margin = {\n      top: 20,\n      right: 30,\n      bottom: 30,\n      left: 40\n    };\n    var width = svg.attr(\"width\") - margin.left - margin.right;\n    var height = svg.attr(\"height\") - margin.bottom - margin.top;\n    var x = d3.scaleUtc().domain(d3.extent(data, d => d.date)).range([margin.left, width - margin.right]);\n    var y = d3.scaleLinear().domain([0, d3.max(data, d => d.value)]).nice().range([height - margin.bottom, margin.top]);\n\n    var xAxis = g => g.attr(\"transform\", `translate(0,${height - margin.bottom})`).call(d3.axisBottom(x).ticks(width / 80).tickSizeOuter(0));\n\n    var yAxis = g => g.attr(\"transform\", `translate(${margin.left},0)`).call(d3.axisLeft(y)).call(g => g.select(\".domain\").remove()).call(g => g.select(\".tick:last-of-type text\").clone().attr(\"x\", 3).attr(\"text-anchor\", \"start\").attr(\"font-weight\", \"bold\").text(data.y));\n\n    x.domain(d3.extent(stockPlotData, function (d) {\n      return parseTime(d.date);\n    }));\n    y.domain([0, d3.max(stockPlotData, function (d) {\n      return d.a;\n    })]);\n\n    var multiline = function (category) {\n      var line = d3.line().x(function (d) {\n        return x(parseTime(d.date));\n      }).y(function (d) {\n        return y(d[category]);\n      });\n      return line;\n    };\n\n    var categories = ['a']; //var color = d3.scaleOrdinal(d3.schemeCategory10);\n\n    var g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    for (let i in categories) {\n      var lineFunction = multiline(categories[i]);\n      g.append(\"path\").datum(stockPlotData).attr(\"class\", \"line\").style(\"stroke\", \"blue\").style(\"fill\", \"None\").attr(\"d\", lineFunction);\n    } // Add the X Axis\n\n\n    g.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x).tickFormat(d3.timeFormat(\"%Y-%m-%d\"))); // Add the Y Axis\n\n    g.append(\"g\").call(d3.axisLeft(y));\n\n    function formateDate() {\n      return date.toLocaleString(\"en\", {\n        month: \"short\",\n        day: \"numeric\",\n        year: \"numeric\",\n        timeZone: \"UTC\"\n      });\n    }\n\n    function formatValue() {\n      return value.toLocaleString(\"en\", {\n        style: \"currency\",\n        currency: \"USD\"\n      });\n    }\n\n    function bisect() {\n      const bisect = d3.bisector(d => d.date).left;\n      return mx => {\n        const date = x.invert(mx);\n        const index = bisect(data, date, 1);\n        const a = data[index - 1];\n        const b = data[index];\n        return b && date - a.date > b.date - date ? b : a;\n      };\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, this.state.ticker);\n  }\n\n}\n\nexport default Timeline;","map":{"version":3,"sources":["/Users/morris754/Documents/projects/dashboard/client/src/components/Timeline.js"],"names":["React","Component","d3","Timeline","constructor","state","drawChart","bind","componentDidMount","data","Object","assign","csv","map","date","close","value","y","svg","select","append","attr","margin","top","right","bottom","left","width","height","x","scaleUtc","domain","extent","d","range","scaleLinear","max","nice","xAxis","g","call","axisBottom","ticks","tickSizeOuter","yAxis","axisLeft","remove","clone","text","stockPlotData","parseTime","a","multiline","category","line","categories","i","lineFunction","datum","style","tickFormat","timeFormat","formateDate","toLocaleString","month","day","year","timeZone","formatValue","currency","bisect","bisector","mx","invert","index","b","render","ticker"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nclass Timeline extends Component {\n  constructor() {\n    super()\n    this.state = {\n    }\n    this.drawChart = this.drawChart.bind(this)\n  }\n\n  componentDidMount() {\n    this.drawChart()\n  }\n\n\n  async drawChart() {\n    var data = Object.assign(d3.csv('../data/aapl.csv').map(({date, close}) => ({date, value: close})), {y: \"$ Close\"})      \n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", 960)\n      .attr(\"height\", 300)\n\n    var margin = ({top: 20, right: 30, bottom: 30, left: 40})\n    var width = svg.attr(\"width\") - margin.left - margin.right;\n    var height = svg.attr(\"height\") - margin.bottom - margin.top;\n\n\n    var x = d3.scaleUtc()\n    .domain(d3.extent(data, d => d.date))\n    .range([margin.left, width - margin.right])\n    \n    var y = d3.scaleLinear()\n    .domain([0, d3.max(data, d => d.value)]).nice()\n    .range([height - margin.bottom, margin.top])\n\n    var xAxis = g => g\n        .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n        .call(d3.axisBottom(x).ticks(width / 80).tickSizeOuter(0))\n\n    var yAxis = g => g\n        .attr(\"transform\", `translate(${margin.left},0)`)\n        .call(d3.axisLeft(y))\n        .call(g => g.select(\".domain\").remove())\n        .call(g => g.select(\".tick:last-of-type text\").clone()\n            .attr(\"x\", 3)\n            .attr(\"text-anchor\", \"start\")\n            .attr(\"font-weight\", \"bold\")\n            .text(data.y))\n\n    x.domain(d3.extent(stockPlotData, function(d) { return parseTime(d.date); }));\n    y.domain([0, \n              d3.max(stockPlotData, function(d) { \n                return d.a;\n              })]);\n    \n    var multiline = function(category) {\n      var line = d3.line()\n                  .x(function(d) { return x(parseTime(d.date)); })\n                  .y(function(d) { return y(d[category]); });\n      return line;\n    }\n    \n    var categories = ['a'];\n    //var color = d3.scaleOrdinal(d3.schemeCategory10);\n    \n    var g = svg.append(\"g\")\n        .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n    for (let i in categories) {\n      var lineFunction = multiline(categories[i]);\n      g.append(\"path\")\n        .datum(stockPlotData) \n        .attr(\"class\", \"line\")\n        .style(\"stroke\", \"blue\")\n        .style(\"fill\", \"None\")\n        .attr(\"d\", lineFunction);\n    }\n  \n    // Add the X Axis\n    g.append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x).tickFormat(d3.timeFormat(\"%Y-%m-%d\")));\n  \n    // Add the Y Axis\n    g.append(\"g\")\n    .call(d3.axisLeft(y));\n\n    function formateDate () {\n        return date.toLocaleString(\"en\", {\n            month: \"short\",\n            day: \"numeric\",\n            year: \"numeric\",\n            timeZone: \"UTC\"\n          });\n      }\n    \n    function formatValue() {\n        return value.toLocaleString(\"en\", {\n            style: \"currency\",\n            currency: \"USD\"\n          });    \n      }\n    \n    function bisect() {\n        const bisect = d3.bisector(d => d.date).left;\n        return mx => {\n          const date = x.invert(mx);\n          const index = bisect(data, date, 1);\n          const a = data[index - 1];\n          const b = data[index];\n          return b && (date - a.date > b.date - date) ? b : a;\n        };\n      }\n\n  }\n\n\n  render(){\n    return (<div>{this.state.ticker}</div>)\n  }\n}\n\n\nexport default Timeline;"]},"metadata":{},"sourceType":"module"}